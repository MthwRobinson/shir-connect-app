stages:
  - test
  - deploy_dev

test:
  image: python:3.6
  stage: test
  before_script:
    - apt-get -qq update
    - apt-get -qq install -y python-virtualenv python3-pip
    - python3 -m venv test_environment
    - . test_environment/bin/activate
  script:
    - echo $SHIR_CONNECT_ENV
    - echo "13.58.50.14:5432:*:postgres:${POSTGRES_PASSWORD}" >> ~/.pgpass
    - chmod 0600 ~/.pgpass
    - cd server
    - pip install -e .[test]
    - py.test --cov=shir_connect
  coverage: '/TOTAL.*\s+(\d+%)$/'

deploy_dev:
  stage: deploy_dev
  image: ubuntu:latest
  before_script:
    - curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.0/install.sh | bash
    - nvm install node
    - nvm install 11.0.0
    - nvm use 11.0.0
    - sudo apt-get update
    - sudo apt-get install software-properties-common
    - sudo apt-add-repository --yes --update ppa:ansible/ansible
    - sudo apt-get install ansible
    - echo "[dev]" >> /etc/ansible/hosts
    - echo "ubuntu@13.58.50.14" >> etc/ansible/hosts
  script:
    - cd ui
    - npm run build
    - cd ../deployment
    - ansible-playbook deploy.yml -e host=dev -e user=ubuntu -e local_user=ubuntu -e $CI_COMMIT_SHA
